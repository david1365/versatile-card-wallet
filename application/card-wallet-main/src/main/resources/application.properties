######## Logging ############################
logging.file.name=${versatile.application.logging.file.name:versatile-card-wallet-application.log}
logging.file.path=${versatile.application.logging.file.path:.}

logging.level.org.springframework.cloud.gateway=${versatile.application.logging.level:DEBUG}
logging.level.org.springframework=${versatile.application.logging.level.org.springframework:DEBUG}
logging.level.reactor.netty.http.client=${versatile.application.logging.level.reactor.netty.http.client:DEBUG}
logging.level.tech.hardik=${versatile.application.logging.level.tech.hardik:DEBUG}
logging.level.ir.caspco=${versatile.application.logging.level.ir.caspco:TRACE}
logging.level.root=${versatile.application.logging.level.root:DEBUG}
logging.level.org.hibernate=${versatile.application.logging.level.org.hibernate:DEBUG}



######## Server ############################
server.port=${versatile.application.port:8443}
server.ssl.key-store-type=${versatile.application.ssl.key-store-type:JKS}
server.ssl.key-store=${versatile.application.ssl.key-store:keystore.jks}
server.ssl.key-store-password=${versatile.application.ssl.key-store-password:ir.caspco}
server.ssl.key-alias=${versatile.application.ssl.key-alias:caspian}
server.ssl.enabled=${versatile.application.ssl.enabled:false}

######## Service-Discovery ############################
spring.application.name=${versatile.application.name:versatile-card-wallet}
eureka.client.serviceUrl.defaultZone=${versatile.service-discovery.client.serviceUrl.defaultZone: http://admin:admin@localhost:8761/eureka}


######## Database ############################
spring.datasource.driver-class-name=${versatile.application.datasource.driver-class-name:oracle.jdbc.OracleDriver}
spring.datasource.hikari.connectionTimeout=${versatile.application.datasource.hikari.connectionTimeout:300000}
spring.datasource.hikari.idleTimeout=${versatile.application.datasource.hikari.idleTimeout:120000}
spring.datasource.hikari.maxLifetime=${versatile.application.datasource.hikari.maxLifetime:2000000}
spring.datasource.hikari.maximumPoolSize=${versatile.application.datasource.hikari.maximumPoolSize:250}
spring.datasource.hikari.leakDetectionThreshold=${versatile.application.datasource.hikari.leakDetectionThreshold:300000}
spring.datasource.hikari.minimumIdle=${versatile.application.datasource.hikari.minimumIdle:5}
spring.datasource.hikari.poolName=${versatile.application.datasource.hikari.poolName:HikariPoolBooks}
spring.jpa.database-platform=${versatile.application.jpa.database-platform:org.hibernate.dialect.Oracle12cDialect}
spring.jpa.generate-ddl=${versatile.application.jpa.generate-ddl:true}
spring.jpa.hibernate.ddl-auto=${versatile.application.jpa.hibernate.ddl-auto:update}
spring.jpa.hibernate.use-new-id-generator-mappings=${versatile.application.jpa.hibernate.use-new-id-generator-mappings:false}
spring.jpa.show-sql=${versatile.application.jpa.show-sql:false}


######## Spring ############################
spring.datasource.url=${versatile.application.datasource.url:jdbc:oracle:thin:@//192.168.17.58:1521/UAT}
spring.datasource.username=${versatile.application.datasource.username:WAL}
spring.datasource.password=${versatile.application.datasource.password:KEYeV5qu6u3S6M8E}

spring.cloud.gateway.httpclient.wiretap=${versatile.application.httpclient.wiretap:true}
spring.cloud.gateway.httpserver.wiretap=${versatile.application.httpserver.wiretap:true}
spring.main.banner-mode=off
spring.profiles.active=@spring.profiles.active@
spring.main.web-application-type=reactive


####### Versatile Application #####################
cardWallet.prefix=${versatile.application.cardWallet.prefix:/card/wallet}


####### Esb #####################
esb.uri=${versatile.application.esb.uri:http://192.168.246.133:8280}
esb.path.doPaymentWithoutLogin=${versatile.application.esb.path.doPaymentWithoutLogin:/mobileBankAppTest/1.0/doPaymentWithoutLogin}


####### Lotus Client #####################
client.core.channel=${versatile.application.jms.client.core.channel:BRANCH}
client.core.credentials=${versatile.application.jms.client.core.credentials:test@1001:IRR}
client.core.connectionFactory=${versatile.application.jms.client.core.connectionFactory:com.casp.jms.mainConnectionFactory}
client.core.filter=${versatile.application.jms.client.core.filter:ServerNode-APPTEST}
client.core.request.queue=${versatile.application.jms.client.core.request.queue:com.casp.jms.queue.LotusQueueRequest}
client.core.response.queue=${versatile.application.jms.client.core.response.queue:com.casp.jms.queue.LotusQueueResponse}
client.core.version=${versatile.application.jms.client.core.version:1.3.16.0}
client.webLogic.url=${versatile.application.jms.client.webLogic.url:t3://192.168.18.117:7001}
client.queue.request.timeout=${versatile.application.jms.client.queue.request.timeout:30000}


####### RestTemplate #####################
restTemplate.connectTimeout=${versatile.application.restTemplate.connectTimeout:3000}
restTemplate.readTimeout=${versatile.application.restTemplate.readTimeout:3000}


####### swagger #####################
springfox.documentation.swagger-ui.host=${versatile.application.swagger-ui.documentation.host:localhost:8090}
springfox.documentation.swagger-ui.pathMapping=${versatile.application.swagger-ui.documentation.pathMapping:/gateway/hampa}
springfox.documentation.swagger-ui.enabled=${versatile.application.swagger-ui.enabled:true}

springfox.documentation.swagger-ui.title=${versatile.application.swagger-ui.documentation.title:Hampa Card Wallet}
springfox.documentation.swagger-ui.description=${versatile.application.swagger-ui.documentation.description:To perform banking operations with a wallet.}
springfox.documentation.swagger-ui.version=${versatile.application.swagger-ui.documentation.version:1.0}
springfox.documentation.swagger-ui.name=${versatile.application.swagger-ui.documentation.name:Davood Akbari}
springfox.documentation.swagger-ui.email=${versatile.application.swagger-ui.documentation.email:daak1365@gmail.com}


####### security.oauth2 #####################
spring.security.oauth2.resourceserver.jwt.issuer-uri=${versatile.application.security.oauth2.issuer-uri:http://localhost:8180/auth/realms/api-gateway}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${versatile.application.security.oauth2.jwk-set-uri:http://localhost:8180/auth/realms/api-gateway/protocol/openid-connect/certs}
security.oauth2.client.issuer-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}
security.oauth2.client.authorization-uri=${versatile.application.security.oauth2.authorization-uri:http://localhost:8180/auth/realms/api-gateway/protocol/openid-connect/auth}
security.oauth2.client.user-name-attribute=${versatile.application.security.oauth2.user-name-attribute:preferred_username}
security.oauth2.client.registration.client-id=${versatile.application.security.oauth2.registration.client-id:client-api-gateway}
security.oauth2.client.registration.client-secret=${versatile.application.security.oauth2.registration.client-secret:4a272860-07b1-4048-8f72-70285b6da7f0}


####### Card Wallet #####################
cardWallet.cardProductId=${versatile.application.cardWallet.cardProductId:643}

cardWallet.creditCardSegmentCode=${versatile.application.cardWallet.creditCardSegmentCode:10}
wallet-hampa.defaultThirdPartyConfigId=${versatile.gateway.walletHampa.defaultThirdPartyConfigId:342}

cardWallet.merchant.charge.cron=${versatile.application.cardWallet.cardWallet.merchant.charge.cron:* 5 5 * * ?}
cardWallet.merchant.purchase.cron=${versatile.application.cardWallet.cardWallet.merchant.purchase.cron:* 5 5 * * ?}

cardWallet.purchase.directCharge.paymentServiceId=${versatile.application.cardWallet.purchase.directCharge.paymentServiceId:0}
cardWallet.purchase.internetPackage.paymentServiceId=${versatile.application.cardWallet.purchase.internetPackage.paymentServiceId:0}

cardWallet.noIdentityNo.birthDate=${versatile.application.cardWallet.noIdentityNo.birthDate:1989-03-21}
cardWallet.noIdentityNo.identityNo=${versatile.application.cardWallet.noIdentityNo.identityNo:0}

cardWallet.creditCard.companyCode=${versatile.application.cardWallet.creditCard.companyCode:C01}
cardWallet.creditCard.requesterCode=${versatile.application.cardWallet.creditCard.requesterCode:HAMPA}


####### Cryptography #####################
cryptography.caspian.key-store.path=${versatile.application.cryptography.caspian.key-store.path:caspian-keystore.jks}
cryptography.caspian.key-store.password=${versatile.application.cryptography.caspian.key-store.password:ir.caspco}
cryptography.caspian.key-store.alias=${versatile.application.cryptography.caspian.key-store.alias:caspian}

cryptography.hampa.key-store.path=${versatile.application.cryptography.hampa.key-store.path:hampa-keystore.jks}
cryptography.hampa.key-store.password=${versatile.application.cryptography.hampa.key-store.password:hampa$1401}
cryptography.hampa.key-store.alias=${versatile.application.cryptography.hampa.key-store.alias:hampa}